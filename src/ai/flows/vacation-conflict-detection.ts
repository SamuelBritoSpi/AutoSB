// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Detects potential conflicts between vacation requests and project deadlines.
 *
 * - vacationConflictDetection - A function that detects conflicts between vacation requests and project deadlines.
 * - VacationConflictDetectionInput - The input type for the vacationConflictDetection function.
 * - VacationConflictDetectionOutput - The return type for the vacationConflictDetection function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const VacationConflictDetectionInputSchema = z.object({
  vacationStartDate: z
    .string()
    .describe('The start date of the vacation request (YYYY-MM-DD).'),
  vacationEndDate: z
    .string()
    .describe('The end date of the vacation request (YYYY-MM-DD).'),
  employeeName: z.string().describe('The name of the employee requesting vacation.'),
  projectDueDate: z.string().describe('The due date of the project (YYYY-MM-DD).'),
  projectPriority: z
    .enum(['high', 'medium', 'low'])
    .describe('The priority of the project (high, medium, or low).'),
  projectDescription: z.string().describe('The description of the project.'),
});

export type VacationConflictDetectionInput = z.infer<
  typeof VacationConflictDetectionInputSchema
>;

const VacationConflictDetectionOutputSchema = z.object({
  conflictDetected: z
    .boolean()
    .describe('Whether a conflict is detected between the vacation and project.'),
  conflictDetails: z
    .string()
    .describe('Details about the conflict, if any. Otherwise, should be empty.'),
});

export type VacationConflictDetectionOutput = z.infer<
  typeof VacationConflictDetectionOutputSchema
>;

export async function vacationConflictDetection(
  input: VacationConflictDetectionInput
): Promise<VacationConflictDetectionOutput> {
  return vacationConflictDetectionFlow(input);
}

const vacationConflictDetectionPrompt = ai.definePrompt({
  name: 'vacationConflictDetectionPrompt',
  input: {schema: VacationConflictDetectionInputSchema},
  output: {schema: VacationConflictDetectionOutputSchema},
  prompt: `You are an expert project manager. Your task is to determine if a potential vacation request from an employee will conflict with a project deadline, based on the provided information.

Vacation Start Date: {{{vacationStartDate}}}
Vacation End Date: {{{vacationEndDate}}}
Employee Name: {{{employeeName}}}
Project Due Date: {{{projectDueDate}}}
Project Priority: {{{projectPriority}}}
Project Description: {{{projectDescription}}}

Determine if the vacation overlaps with the project due date, taking into account the project priority. If the vacation overlaps with a high-priority project, or a medium-priority project with a close due date, flag it as a conflict.

Output your response as JSON in the following format:
{
  "conflictDetected": true/false, // true if a conflict is detected, false otherwise
  "conflictDetails": "..." // details about the conflict, or an empty string if no conflict
}
`,
});

const vacationConflictDetectionFlow = ai.defineFlow(
  {
    name: 'vacationConflictDetectionFlow',
    inputSchema: VacationConflictDetectionInputSchema,
    outputSchema: VacationConflictDetectionOutputSchema,
  },
  async input => {
    const {output} = await vacationConflictDetectionPrompt(input);
    return output!;
  }
);
